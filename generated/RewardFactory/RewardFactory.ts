// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BaseRewardPoolCreated extends ethereum.Event {
  get params(): BaseRewardPoolCreated__Params {
    return new BaseRewardPoolCreated__Params(this);
  }
}

export class BaseRewardPoolCreated__Params {
  _event: BaseRewardPoolCreated;

  constructor(event: BaseRewardPoolCreated) {
    this._event = event;
  }

  get poolAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ExtraRewardAdded extends ethereum.Event {
  get params(): ExtraRewardAdded__Params {
    return new ExtraRewardAdded__Params(this);
  }
}

export class ExtraRewardAdded__Params {
  _event: ExtraRewardAdded;

  constructor(event: ExtraRewardAdded) {
    this._event = event;
  }

  get reward(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ExtraRewardRemoved extends ethereum.Event {
  get params(): ExtraRewardRemoved__Params {
    return new ExtraRewardRemoved__Params(this);
  }
}

export class ExtraRewardRemoved__Params {
  _event: ExtraRewardRemoved;

  constructor(event: ExtraRewardRemoved) {
    this._event = event;
  }

  get reward(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class StashAccessGranted extends ethereum.Event {
  get params(): StashAccessGranted__Params {
    return new StashAccessGranted__Params(this);
  }
}

export class StashAccessGranted__Params {
  _event: StashAccessGranted;

  constructor(event: StashAccessGranted) {
    this._event = event;
  }

  get stash(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VirtualBalanceRewardPoolCreated extends ethereum.Event {
  get params(): VirtualBalanceRewardPoolCreated__Params {
    return new VirtualBalanceRewardPoolCreated__Params(this);
  }
}

export class VirtualBalanceRewardPoolCreated__Params {
  _event: VirtualBalanceRewardPoolCreated;

  constructor(event: VirtualBalanceRewardPoolCreated) {
    this._event = event;
  }

  get poolAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RewardFactory extends ethereum.SmartContract {
  static bind(address: Address): RewardFactory {
    return new RewardFactory("RewardFactory", address);
  }

  activeRewardCount(_reward: Address): BigInt {
    let result = super.call(
      "activeRewardCount",
      "activeRewardCount(address):(uint256)",
      [ethereum.Value.fromAddress(_reward)]
    );

    return result[0].toBigInt();
  }

  try_activeRewardCount(_reward: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "activeRewardCount",
      "activeRewardCount(address):(uint256)",
      [ethereum.Value.fromAddress(_reward)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addActiveReward(_reward: Address, _pid: BigInt): boolean {
    let result = super.call(
      "addActiveReward",
      "addActiveReward(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_reward),
        ethereum.Value.fromUnsignedBigInt(_pid)
      ]
    );

    return result[0].toBoolean();
  }

  try_addActiveReward(
    _reward: Address,
    _pid: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "addActiveReward",
      "addActiveReward(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_reward),
        ethereum.Value.fromUnsignedBigInt(_pid)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  bal(): Address {
    let result = super.call("bal", "bal():(address)", []);

    return result[0].toAddress();
  }

  try_bal(): ethereum.CallResult<Address> {
    let result = super.tryCall("bal", "bal():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createBalRewards(_pid: BigInt, _depositToken: Address): Address {
    let result = super.call(
      "createBalRewards",
      "createBalRewards(uint256,address):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(_pid),
        ethereum.Value.fromAddress(_depositToken)
      ]
    );

    return result[0].toAddress();
  }

  try_createBalRewards(
    _pid: BigInt,
    _depositToken: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createBalRewards",
      "createBalRewards(uint256,address):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(_pid),
        ethereum.Value.fromAddress(_depositToken)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createTokenRewards(
    _token: Address,
    _mainRewards: Address,
    _rewardPoolOwner: Address
  ): Address {
    let result = super.call(
      "createTokenRewards",
      "createTokenRewards(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromAddress(_mainRewards),
        ethereum.Value.fromAddress(_rewardPoolOwner)
      ]
    );

    return result[0].toAddress();
  }

  try_createTokenRewards(
    _token: Address,
    _mainRewards: Address,
    _rewardPoolOwner: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createTokenRewards",
      "createTokenRewards(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromAddress(_mainRewards),
        ethereum.Value.fromAddress(_rewardPoolOwner)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  operator(): Address {
    let result = super.call("operator", "operator():(address)", []);

    return result[0].toAddress();
  }

  try_operator(): ethereum.CallResult<Address> {
    let result = super.tryCall("operator", "operator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  removeActiveReward(_reward: Address, _pid: BigInt): boolean {
    let result = super.call(
      "removeActiveReward",
      "removeActiveReward(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_reward),
        ethereum.Value.fromUnsignedBigInt(_pid)
      ]
    );

    return result[0].toBoolean();
  }

  try_removeActiveReward(
    _reward: Address,
    _pid: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "removeActiveReward",
      "removeActiveReward(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_reward),
        ethereum.Value.fromUnsignedBigInt(_pid)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  rewardActiveList(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "rewardActiveList",
      "rewardActiveList(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_rewardActiveList(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "rewardActiveList",
      "rewardActiveList(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bal(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddActiveRewardCall extends ethereum.Call {
  get inputs(): AddActiveRewardCall__Inputs {
    return new AddActiveRewardCall__Inputs(this);
  }

  get outputs(): AddActiveRewardCall__Outputs {
    return new AddActiveRewardCall__Outputs(this);
  }
}

export class AddActiveRewardCall__Inputs {
  _call: AddActiveRewardCall;

  constructor(call: AddActiveRewardCall) {
    this._call = call;
  }

  get _reward(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _pid(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddActiveRewardCall__Outputs {
  _call: AddActiveRewardCall;

  constructor(call: AddActiveRewardCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateBalRewardsCall extends ethereum.Call {
  get inputs(): CreateBalRewardsCall__Inputs {
    return new CreateBalRewardsCall__Inputs(this);
  }

  get outputs(): CreateBalRewardsCall__Outputs {
    return new CreateBalRewardsCall__Outputs(this);
  }
}

export class CreateBalRewardsCall__Inputs {
  _call: CreateBalRewardsCall;

  constructor(call: CreateBalRewardsCall) {
    this._call = call;
  }

  get _pid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _depositToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreateBalRewardsCall__Outputs {
  _call: CreateBalRewardsCall;

  constructor(call: CreateBalRewardsCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateTokenRewardsCall extends ethereum.Call {
  get inputs(): CreateTokenRewardsCall__Inputs {
    return new CreateTokenRewardsCall__Inputs(this);
  }

  get outputs(): CreateTokenRewardsCall__Outputs {
    return new CreateTokenRewardsCall__Outputs(this);
  }
}

export class CreateTokenRewardsCall__Inputs {
  _call: CreateTokenRewardsCall;

  constructor(call: CreateTokenRewardsCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _mainRewards(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _rewardPoolOwner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CreateTokenRewardsCall__Outputs {
  _call: CreateTokenRewardsCall;

  constructor(call: CreateTokenRewardsCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class GrantRewardStashAccessCall extends ethereum.Call {
  get inputs(): GrantRewardStashAccessCall__Inputs {
    return new GrantRewardStashAccessCall__Inputs(this);
  }

  get outputs(): GrantRewardStashAccessCall__Outputs {
    return new GrantRewardStashAccessCall__Outputs(this);
  }
}

export class GrantRewardStashAccessCall__Inputs {
  _call: GrantRewardStashAccessCall;

  constructor(call: GrantRewardStashAccessCall) {
    this._call = call;
  }

  get _stash(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GrantRewardStashAccessCall__Outputs {
  _call: GrantRewardStashAccessCall;

  constructor(call: GrantRewardStashAccessCall) {
    this._call = call;
  }
}

export class RemoveActiveRewardCall extends ethereum.Call {
  get inputs(): RemoveActiveRewardCall__Inputs {
    return new RemoveActiveRewardCall__Inputs(this);
  }

  get outputs(): RemoveActiveRewardCall__Outputs {
    return new RemoveActiveRewardCall__Outputs(this);
  }
}

export class RemoveActiveRewardCall__Inputs {
  _call: RemoveActiveRewardCall;

  constructor(call: RemoveActiveRewardCall) {
    this._call = call;
  }

  get _reward(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _pid(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveActiveRewardCall__Outputs {
  _call: RemoveActiveRewardCall;

  constructor(call: RemoveActiveRewardCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
