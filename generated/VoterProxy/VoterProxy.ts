// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DepositorChanged extends ethereum.Event {
  get params(): DepositorChanged__Params {
    return new DepositorChanged__Params(this);
  }
}

export class DepositorChanged__Params {
  _event: DepositorChanged;

  constructor(event: DepositorChanged) {
    this._event = event;
  }

  get newDepositor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OperatorChanged extends ethereum.Event {
  get params(): OperatorChanged__Params {
    return new OperatorChanged__Params(this);
  }
}

export class OperatorChanged__Params {
  _event: OperatorChanged;

  constructor(event: OperatorChanged) {
    this._event = event;
  }

  get newOperator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VoterProxyOwnerChanged extends ethereum.Event {
  get params(): VoterProxyOwnerChanged__Params {
    return new VoterProxyOwnerChanged__Params(this);
  }
}

export class VoterProxyOwnerChanged__Params {
  _event: VoterProxyOwnerChanged;

  constructor(event: VoterProxyOwnerChanged) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class StashAccessGranted extends ethereum.Event {
  get params(): StashAccessGranted__Params {
    return new StashAccessGranted__Params(this);
  }
}

export class StashAccessGranted__Params {
  _event: StashAccessGranted;

  constructor(event: StashAccessGranted) {
    this._event = event;
  }

  get stash(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VotingPowerCleared extends ethereum.Event {
  get params(): VotingPowerCleared__Params {
    return new VotingPowerCleared__Params(this);
  }
}

export class VotingPowerCleared__Params {
  _event: VotingPowerCleared;

  constructor(event: VotingPowerCleared) {
    this._event = event;
  }
}

export class VotingPowerDelegated extends ethereum.Event {
  get params(): VotingPowerDelegated__Params {
    return new VotingPowerDelegated__Params(this);
  }
}

export class VotingPowerDelegated__Params {
  _event: VotingPowerDelegated;

  constructor(event: VotingPowerDelegated) {
    this._event = event;
  }

  get _delegate(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VoterProxy__executeResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getValue0(): boolean {
    return this.value0;
  }

  getValue1(): Bytes {
    return this.value1;
  }
}

export class VoterProxy extends ethereum.SmartContract {
  static bind(address: Address): VoterProxy {
    return new VoterProxy("VoterProxy", address);
  }

  BALANCER_SNAPSHOT_ID(): Bytes {
    let result = super.call(
      "BALANCER_SNAPSHOT_ID",
      "BALANCER_SNAPSHOT_ID():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_BALANCER_SNAPSHOT_ID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "BALANCER_SNAPSHOT_ID",
      "BALANCER_SNAPSHOT_ID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SNAPSHOT_REGISTRY(): Address {
    let result = super.call(
      "SNAPSHOT_REGISTRY",
      "SNAPSHOT_REGISTRY():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_SNAPSHOT_REGISTRY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "SNAPSHOT_REGISTRY",
      "SNAPSHOT_REGISTRY():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  bal(): Address {
    let result = super.call("bal", "bal():(address)", []);

    return result[0].toAddress();
  }

  try_bal(): ethereum.CallResult<Address> {
    let result = super.tryCall("bal", "bal():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOfPool(_gauge: Address): BigInt {
    let result = super.call(
      "balanceOfPool",
      "balanceOfPool(address):(uint256)",
      [ethereum.Value.fromAddress(_gauge)]
    );

    return result[0].toBigInt();
  }

  try_balanceOfPool(_gauge: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOfPool",
      "balanceOfPool(address):(uint256)",
      [ethereum.Value.fromAddress(_gauge)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimBal(_gauge: Address): BigInt {
    let result = super.call("claimBal", "claimBal(address):(uint256)", [
      ethereum.Value.fromAddress(_gauge)
    ]);

    return result[0].toBigInt();
  }

  try_claimBal(_gauge: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("claimBal", "claimBal(address):(uint256)", [
      ethereum.Value.fromAddress(_gauge)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimFees(_distroContract: Address, _token: Address): BigInt {
    let result = super.call(
      "claimFees",
      "claimFees(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(_distroContract),
        ethereum.Value.fromAddress(_token)
      ]
    );

    return result[0].toBigInt();
  }

  try_claimFees(
    _distroContract: Address,
    _token: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimFees",
      "claimFees(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(_distroContract),
        ethereum.Value.fromAddress(_token)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositor(): Address {
    let result = super.call("depositor", "depositor():(address)", []);

    return result[0].toAddress();
  }

  try_depositor(): ethereum.CallResult<Address> {
    let result = super.tryCall("depositor", "depositor():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  execute(
    _to: Address,
    _value: BigInt,
    _data: Bytes
  ): VoterProxy__executeResult {
    let result = super.call(
      "execute",
      "execute(address,uint256,bytes):(bool,bytes)",
      [
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_value),
        ethereum.Value.fromBytes(_data)
      ]
    );

    return new VoterProxy__executeResult(
      result[0].toBoolean(),
      result[1].toBytes()
    );
  }

  try_execute(
    _to: Address,
    _value: BigInt,
    _data: Bytes
  ): ethereum.CallResult<VoterProxy__executeResult> {
    let result = super.tryCall(
      "execute",
      "execute(address,uint256,bytes):(bool,bytes)",
      [
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_value),
        ethereum.Value.fromBytes(_data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VoterProxy__executeResult(value[0].toBoolean(), value[1].toBytes())
    );
  }

  gaugeController(): Address {
    let result = super.call(
      "gaugeController",
      "gaugeController():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_gaugeController(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "gaugeController",
      "gaugeController():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mintr(): Address {
    let result = super.call("mintr", "mintr():(address)", []);

    return result[0].toAddress();
  }

  try_mintr(): ethereum.CallResult<Address> {
    let result = super.tryCall("mintr", "mintr():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  operator(): Address {
    let result = super.call("operator", "operator():(address)", []);

    return result[0].toAddress();
  }

  try_operator(): ethereum.CallResult<Address> {
    let result = super.tryCall("operator", "operator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  veBal(): Address {
    let result = super.call("veBal", "veBal():(address)", []);

    return result[0].toAddress();
  }

  try_veBal(): ethereum.CallResult<Address> {
    let result = super.tryCall("veBal", "veBal():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  wethBal(): Address {
    let result = super.call("wethBal", "wethBal():(address)", []);

    return result[0].toAddress();
  }

  try_wethBal(): ethereum.CallResult<Address> {
    let result = super.tryCall("wethBal", "wethBal():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  withdraw(_asset: Address): BigInt {
    let result = super.call("withdraw", "withdraw(address):(uint256)", [
      ethereum.Value.fromAddress(_asset)
    ]);

    return result[0].toBigInt();
  }

  try_withdraw(_asset: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("withdraw", "withdraw(address):(uint256)", [
      ethereum.Value.fromAddress(_asset)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _mintr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bal(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _wethBal(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _veBal(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _gaugeController(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimBalCall extends ethereum.Call {
  get inputs(): ClaimBalCall__Inputs {
    return new ClaimBalCall__Inputs(this);
  }

  get outputs(): ClaimBalCall__Outputs {
    return new ClaimBalCall__Outputs(this);
  }
}

export class ClaimBalCall__Inputs {
  _call: ClaimBalCall;

  constructor(call: ClaimBalCall) {
    this._call = call;
  }

  get _gauge(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ClaimBalCall__Outputs {
  _call: ClaimBalCall;

  constructor(call: ClaimBalCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimFeesCall extends ethereum.Call {
  get inputs(): ClaimFeesCall__Inputs {
    return new ClaimFeesCall__Inputs(this);
  }

  get outputs(): ClaimFeesCall__Outputs {
    return new ClaimFeesCall__Outputs(this);
  }
}

export class ClaimFeesCall__Inputs {
  _call: ClaimFeesCall;

  constructor(call: ClaimFeesCall) {
    this._call = call;
  }

  get _distroContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ClaimFeesCall__Outputs {
  _call: ClaimFeesCall;

  constructor(call: ClaimFeesCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimRewardsCall extends ethereum.Call {
  get inputs(): ClaimRewardsCall__Inputs {
    return new ClaimRewardsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsCall__Outputs {
    return new ClaimRewardsCall__Outputs(this);
  }
}

export class ClaimRewardsCall__Inputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }

  get _gauge(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ClaimRewardsCall__Outputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class ClearDelegateCall extends ethereum.Call {
  get inputs(): ClearDelegateCall__Inputs {
    return new ClearDelegateCall__Inputs(this);
  }

  get outputs(): ClearDelegateCall__Outputs {
    return new ClearDelegateCall__Outputs(this);
  }
}

export class ClearDelegateCall__Inputs {
  _call: ClearDelegateCall;

  constructor(call: ClearDelegateCall) {
    this._call = call;
  }
}

export class ClearDelegateCall__Outputs {
  _call: ClearDelegateCall;

  constructor(call: ClearDelegateCall) {
    this._call = call;
  }
}

export class CreateLockCall extends ethereum.Call {
  get inputs(): CreateLockCall__Inputs {
    return new CreateLockCall__Inputs(this);
  }

  get outputs(): CreateLockCall__Outputs {
    return new CreateLockCall__Outputs(this);
  }
}

export class CreateLockCall__Inputs {
  _call: CreateLockCall;

  constructor(call: CreateLockCall) {
    this._call = call;
  }

  get _value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _unlockTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateLockCall__Outputs {
  _call: CreateLockCall;

  constructor(call: CreateLockCall) {
    this._call = call;
  }
}

export class DelegateVotingPowerCall extends ethereum.Call {
  get inputs(): DelegateVotingPowerCall__Inputs {
    return new DelegateVotingPowerCall__Inputs(this);
  }

  get outputs(): DelegateVotingPowerCall__Outputs {
    return new DelegateVotingPowerCall__Outputs(this);
  }
}

export class DelegateVotingPowerCall__Inputs {
  _call: DelegateVotingPowerCall;

  constructor(call: DelegateVotingPowerCall) {
    this._call = call;
  }

  get _delegateTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DelegateVotingPowerCall__Outputs {
  _call: DelegateVotingPowerCall;

  constructor(call: DelegateVotingPowerCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _gauge(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }

  get value1(): Bytes {
    return this._call.outputValues[1].value.toBytes();
  }
}

export class GrantStashAccessCall extends ethereum.Call {
  get inputs(): GrantStashAccessCall__Inputs {
    return new GrantStashAccessCall__Inputs(this);
  }

  get outputs(): GrantStashAccessCall__Outputs {
    return new GrantStashAccessCall__Outputs(this);
  }
}

export class GrantStashAccessCall__Inputs {
  _call: GrantStashAccessCall;

  constructor(call: GrantStashAccessCall) {
    this._call = call;
  }

  get _stash(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GrantStashAccessCall__Outputs {
  _call: GrantStashAccessCall;

  constructor(call: GrantStashAccessCall) {
    this._call = call;
  }
}

export class IncreaseAmountCall extends ethereum.Call {
  get inputs(): IncreaseAmountCall__Inputs {
    return new IncreaseAmountCall__Inputs(this);
  }

  get outputs(): IncreaseAmountCall__Outputs {
    return new IncreaseAmountCall__Outputs(this);
  }
}

export class IncreaseAmountCall__Inputs {
  _call: IncreaseAmountCall;

  constructor(call: IncreaseAmountCall) {
    this._call = call;
  }

  get _value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class IncreaseAmountCall__Outputs {
  _call: IncreaseAmountCall;

  constructor(call: IncreaseAmountCall) {
    this._call = call;
  }
}

export class IncreaseTimeCall extends ethereum.Call {
  get inputs(): IncreaseTimeCall__Inputs {
    return new IncreaseTimeCall__Inputs(this);
  }

  get outputs(): IncreaseTimeCall__Outputs {
    return new IncreaseTimeCall__Outputs(this);
  }
}

export class IncreaseTimeCall__Inputs {
  _call: IncreaseTimeCall;

  constructor(call: IncreaseTimeCall) {
    this._call = call;
  }

  get _value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class IncreaseTimeCall__Outputs {
  _call: IncreaseTimeCall;

  constructor(call: IncreaseTimeCall) {
    this._call = call;
  }
}

export class ReleaseCall extends ethereum.Call {
  get inputs(): ReleaseCall__Inputs {
    return new ReleaseCall__Inputs(this);
  }

  get outputs(): ReleaseCall__Outputs {
    return new ReleaseCall__Outputs(this);
  }
}

export class ReleaseCall__Inputs {
  _call: ReleaseCall;

  constructor(call: ReleaseCall) {
    this._call = call;
  }
}

export class ReleaseCall__Outputs {
  _call: ReleaseCall;

  constructor(call: ReleaseCall) {
    this._call = call;
  }
}

export class SetDepositorCall extends ethereum.Call {
  get inputs(): SetDepositorCall__Inputs {
    return new SetDepositorCall__Inputs(this);
  }

  get outputs(): SetDepositorCall__Outputs {
    return new SetDepositorCall__Outputs(this);
  }
}

export class SetDepositorCall__Inputs {
  _call: SetDepositorCall;

  constructor(call: SetDepositorCall) {
    this._call = call;
  }

  get _depositor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDepositorCall__Outputs {
  _call: SetDepositorCall;

  constructor(call: SetDepositorCall) {
    this._call = call;
  }
}

export class SetOperatorCall extends ethereum.Call {
  get inputs(): SetOperatorCall__Inputs {
    return new SetOperatorCall__Inputs(this);
  }

  get outputs(): SetOperatorCall__Outputs {
    return new SetOperatorCall__Outputs(this);
  }
}

export class SetOperatorCall__Inputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOperatorCall__Outputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class VoteMultipleGaugesCall extends ethereum.Call {
  get inputs(): VoteMultipleGaugesCall__Inputs {
    return new VoteMultipleGaugesCall__Inputs(this);
  }

  get outputs(): VoteMultipleGaugesCall__Outputs {
    return new VoteMultipleGaugesCall__Outputs(this);
  }
}

export class VoteMultipleGaugesCall__Inputs {
  _call: VoteMultipleGaugesCall;

  constructor(call: VoteMultipleGaugesCall) {
    this._call = call;
  }

  get _gauges(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _weights(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class VoteMultipleGaugesCall__Outputs {
  _call: VoteMultipleGaugesCall;

  constructor(call: VoteMultipleGaugesCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Withdraw1Call extends ethereum.Call {
  get inputs(): Withdraw1Call__Inputs {
    return new Withdraw1Call__Inputs(this);
  }

  get outputs(): Withdraw1Call__Outputs {
    return new Withdraw1Call__Outputs(this);
  }
}

export class Withdraw1Call__Inputs {
  _call: Withdraw1Call;

  constructor(call: Withdraw1Call) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _gauge(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class Withdraw1Call__Outputs {
  _call: Withdraw1Call;

  constructor(call: Withdraw1Call) {
    this._call = call;
  }
}

export class WithdrawAllCall extends ethereum.Call {
  get inputs(): WithdrawAllCall__Inputs {
    return new WithdrawAllCall__Inputs(this);
  }

  get outputs(): WithdrawAllCall__Outputs {
    return new WithdrawAllCall__Outputs(this);
  }
}

export class WithdrawAllCall__Inputs {
  _call: WithdrawAllCall;

  constructor(call: WithdrawAllCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _gauge(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawAllCall__Outputs {
  _call: WithdrawAllCall;

  constructor(call: WithdrawAllCall) {
    this._call = call;
  }
}

export class WithdrawWethBalCall extends ethereum.Call {
  get inputs(): WithdrawWethBalCall__Inputs {
    return new WithdrawWethBalCall__Inputs(this);
  }

  get outputs(): WithdrawWethBalCall__Outputs {
    return new WithdrawWethBalCall__Outputs(this);
  }
}

export class WithdrawWethBalCall__Inputs {
  _call: WithdrawWethBalCall;

  constructor(call: WithdrawWethBalCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawWethBalCall__Outputs {
  _call: WithdrawWethBalCall;

  constructor(call: WithdrawWethBalCall) {
    this._call = call;
  }
}
