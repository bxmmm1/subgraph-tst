// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddedPool extends ethereum.Event {
  get params(): AddedPool__Params {
    return new AddedPool__Params(this);
  }
}

export class AddedPool__Params {
  _event: AddedPool;

  constructor(event: AddedPool) {
    this._event = event;
  }

  get _pid(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _lpToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _gauge(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _baseRewardsPool(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get _stash(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class Deposited extends ethereum.Event {
  get params(): Deposited__Params {
    return new Deposited__Params(this);
  }
}

export class Deposited__Params {
  _event: Deposited;

  constructor(event: Deposited) {
    this._event = event;
  }

  get _user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _pid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _stake(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class FeeManagerChanged extends ethereum.Event {
  get params(): FeeManagerChanged__Params {
    return new FeeManagerChanged__Params(this);
  }
}

export class FeeManagerChanged__Params {
  _event: FeeManagerChanged;

  constructor(event: FeeManagerChanged) {
    this._event = event;
  }

  get _newFeeManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FeesChanged extends ethereum.Event {
  get params(): FeesChanged__Params {
    return new FeesChanged__Params(this);
  }
}

export class FeesChanged__Params {
  _event: FeesChanged;

  constructor(event: FeesChanged) {
    this._event = event;
  }

  get _newPlatformFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _newProfitFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnerChanged extends ethereum.Event {
  get params(): OwnerChanged__Params {
    return new OwnerChanged__Params(this);
  }
}

export class OwnerChanged__Params {
  _event: OwnerChanged;

  constructor(event: OwnerChanged) {
    this._event = event;
  }

  get _newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PoolManagerChanged extends ethereum.Event {
  get params(): PoolManagerChanged__Params {
    return new PoolManagerChanged__Params(this);
  }
}

export class PoolManagerChanged__Params {
  _event: PoolManagerChanged;

  constructor(event: PoolManagerChanged) {
    this._event = event;
  }

  get _newPoolManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PoolShutDown extends ethereum.Event {
  get params(): PoolShutDown__Params {
    return new PoolShutDown__Params(this);
  }
}

export class PoolShutDown__Params {
  _event: PoolShutDown;

  constructor(event: PoolShutDown) {
    this._event = event;
  }

  get _pid(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SystemShutdown extends ethereum.Event {
  get params(): SystemShutdown__Params {
    return new SystemShutdown__Params(this);
  }
}

export class SystemShutdown__Params {
  _event: SystemShutdown;

  constructor(event: SystemShutdown) {
    this._event = event;
  }
}

export class TreasuryChanged extends ethereum.Event {
  get params(): TreasuryChanged__Params {
    return new TreasuryChanged__Params(this);
  }
}

export class TreasuryChanged__Params {
  _event: TreasuryChanged;

  constructor(event: TreasuryChanged) {
    this._event = event;
  }

  get _newTreasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VoteDelegateChanged extends ethereum.Event {
  get params(): VoteDelegateChanged__Params {
    return new VoteDelegateChanged__Params(this);
  }
}

export class VoteDelegateChanged__Params {
  _event: VoteDelegateChanged;

  constructor(event: VoteDelegateChanged) {
    this._event = event;
  }

  get _newVoteDelegate(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Withdrawn extends ethereum.Event {
  get params(): Withdrawn__Params {
    return new Withdrawn__Params(this);
  }
}

export class Withdrawn__Params {
  _event: Withdrawn;

  constructor(event: Withdrawn) {
    this._event = event;
  }

  get _user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _pid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Controller__poolInfoResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: Address;
  value4: Address;
  value5: boolean;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: Address,
    value4: Address,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }

  getLptoken(): Address {
    return this.value0;
  }

  getToken(): Address {
    return this.value1;
  }

  getGauge(): Address {
    return this.value2;
  }

  getBalRewards(): Address {
    return this.value3;
  }

  getStash(): Address {
    return this.value4;
  }

  getShutdown(): boolean {
    return this.value5;
  }
}

export class Controller extends ethereum.SmartContract {
  static bind(address: Address): Controller {
    return new Controller("Controller", address);
  }

  FEE_DENOMINATOR(): BigInt {
    let result = super.call(
      "FEE_DENOMINATOR",
      "FEE_DENOMINATOR():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_FEE_DENOMINATOR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "FEE_DENOMINATOR",
      "FEE_DENOMINATOR():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_FEES(): BigInt {
    let result = super.call("MAX_FEES", "MAX_FEES():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_FEES(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MAX_FEES", "MAX_FEES():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_LOCK_TIME(): BigInt {
    let result = super.call("MAX_LOCK_TIME", "MAX_LOCK_TIME():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_LOCK_TIME(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_LOCK_TIME",
      "MAX_LOCK_TIME():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bal(): Address {
    let result = super.call("bal", "bal():(address)", []);

    return result[0].toAddress();
  }

  try_bal(): ethereum.CallResult<Address> {
    let result = super.tryCall("bal", "bal():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeDistro(): Address {
    let result = super.call("feeDistro", "feeDistro():(address)", []);

    return result[0].toAddress();
  }

  try_feeDistro(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeDistro", "feeDistro():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeManager(): Address {
    let result = super.call("feeManager", "feeManager():(address)", []);

    return result[0].toAddress();
  }

  try_feeManager(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeManager", "feeManager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeToken(): Address {
    let result = super.call("feeToken", "feeToken():(address)", []);

    return result[0].toAddress();
  }

  try_feeToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeToken", "feeToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  gaugeMap(param0: Address): boolean {
    let result = super.call("gaugeMap", "gaugeMap(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_gaugeMap(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("gaugeMap", "gaugeMap(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isShutdown(): boolean {
    let result = super.call("isShutdown", "isShutdown():(bool)", []);

    return result[0].toBoolean();
  }

  try_isShutdown(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isShutdown", "isShutdown():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lockFees(): Address {
    let result = super.call("lockFees", "lockFees():(address)", []);

    return result[0].toAddress();
  }

  try_lockFees(): ethereum.CallResult<Address> {
    let result = super.tryCall("lockFees", "lockFees():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  lockRewards(): Address {
    let result = super.call("lockRewards", "lockRewards():(address)", []);

    return result[0].toAddress();
  }

  try_lockRewards(): ethereum.CallResult<Address> {
    let result = super.tryCall("lockRewards", "lockRewards():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  platformFees(): BigInt {
    let result = super.call("platformFees", "platformFees():(uint256)", []);

    return result[0].toBigInt();
  }

  try_platformFees(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("platformFees", "platformFees():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolInfo(param0: BigInt): Controller__poolInfoResult {
    let result = super.call(
      "poolInfo",
      "poolInfo(uint256):(address,address,address,address,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Controller__poolInfoResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toBoolean()
    );
  }

  try_poolInfo(
    param0: BigInt
  ): ethereum.CallResult<Controller__poolInfoResult> {
    let result = super.tryCall(
      "poolInfo",
      "poolInfo(uint256):(address,address,address,address,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Controller__poolInfoResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toAddress(),
        value[5].toBoolean()
      )
    );
  }

  poolLength(): BigInt {
    let result = super.call("poolLength", "poolLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_poolLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("poolLength", "poolLength():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolManager(): Address {
    let result = super.call("poolManager", "poolManager():(address)", []);

    return result[0].toAddress();
  }

  try_poolManager(): ethereum.CallResult<Address> {
    let result = super.tryCall("poolManager", "poolManager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  profitFees(): BigInt {
    let result = super.call("profitFees", "profitFees():(uint256)", []);

    return result[0].toBigInt();
  }

  try_profitFees(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("profitFees", "profitFees():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rewardFactory(): Address {
    let result = super.call("rewardFactory", "rewardFactory():(address)", []);

    return result[0].toAddress();
  }

  try_rewardFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "rewardFactory",
      "rewardFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  staker(): Address {
    let result = super.call("staker", "staker():(address)", []);

    return result[0].toAddress();
  }

  try_staker(): ethereum.CallResult<Address> {
    let result = super.tryCall("staker", "staker():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stashFactory(): Address {
    let result = super.call("stashFactory", "stashFactory():(address)", []);

    return result[0].toAddress();
  }

  try_stashFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("stashFactory", "stashFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenFactory(): Address {
    let result = super.call("tokenFactory", "tokenFactory():(address)", []);

    return result[0].toAddress();
  }

  try_tokenFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("tokenFactory", "tokenFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  voteDelegate(): Address {
    let result = super.call("voteDelegate", "voteDelegate():(address)", []);

    return result[0].toAddress();
  }

  try_voteDelegate(): ethereum.CallResult<Address> {
    let result = super.tryCall("voteDelegate", "voteDelegate():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  voteOwnership(): Address {
    let result = super.call("voteOwnership", "voteOwnership():(address)", []);

    return result[0].toAddress();
  }

  try_voteOwnership(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "voteOwnership",
      "voteOwnership():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  voteParameter(): Address {
    let result = super.call("voteParameter", "voteParameter():(address)", []);

    return result[0].toAddress();
  }

  try_voteParameter(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "voteParameter",
      "voteParameter():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _staker(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bal(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _feeDistro(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _voteOwnership(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _voteParameter(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddPoolCall extends ethereum.Call {
  get inputs(): AddPoolCall__Inputs {
    return new AddPoolCall__Inputs(this);
  }

  get outputs(): AddPoolCall__Outputs {
    return new AddPoolCall__Outputs(this);
  }
}

export class AddPoolCall__Inputs {
  _call: AddPoolCall;

  constructor(call: AddPoolCall) {
    this._call = call;
  }

  get _lptoken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _gauge(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddPoolCall__Outputs {
  _call: AddPoolCall;

  constructor(call: AddPoolCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall extends ethereum.Call {
  get inputs(): ClaimRewardsCall__Inputs {
    return new ClaimRewardsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsCall__Outputs {
    return new ClaimRewardsCall__Outputs(this);
  }
}

export class ClaimRewardsCall__Inputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }

  get _pid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _gauge(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ClaimRewardsCall__Outputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class ClearDelegationCall extends ethereum.Call {
  get inputs(): ClearDelegationCall__Inputs {
    return new ClearDelegationCall__Inputs(this);
  }

  get outputs(): ClearDelegationCall__Outputs {
    return new ClearDelegationCall__Outputs(this);
  }
}

export class ClearDelegationCall__Inputs {
  _call: ClearDelegationCall;

  constructor(call: ClearDelegationCall) {
    this._call = call;
  }
}

export class ClearDelegationCall__Outputs {
  _call: ClearDelegationCall;

  constructor(call: ClearDelegationCall) {
    this._call = call;
  }
}

export class DelegateVotingPowerCall extends ethereum.Call {
  get inputs(): DelegateVotingPowerCall__Inputs {
    return new DelegateVotingPowerCall__Inputs(this);
  }

  get outputs(): DelegateVotingPowerCall__Outputs {
    return new DelegateVotingPowerCall__Outputs(this);
  }
}

export class DelegateVotingPowerCall__Inputs {
  _call: DelegateVotingPowerCall;

  constructor(call: DelegateVotingPowerCall) {
    this._call = call;
  }

  get _delegateTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DelegateVotingPowerCall__Outputs {
  _call: DelegateVotingPowerCall;

  constructor(call: DelegateVotingPowerCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _pid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _stake(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositAllCall extends ethereum.Call {
  get inputs(): DepositAllCall__Inputs {
    return new DepositAllCall__Inputs(this);
  }

  get outputs(): DepositAllCall__Outputs {
    return new DepositAllCall__Outputs(this);
  }
}

export class DepositAllCall__Inputs {
  _call: DepositAllCall;

  constructor(call: DepositAllCall) {
    this._call = call;
  }

  get _pid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _stake(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class DepositAllCall__Outputs {
  _call: DepositAllCall;

  constructor(call: DepositAllCall) {
    this._call = call;
  }
}

export class EarmarkFeesCall extends ethereum.Call {
  get inputs(): EarmarkFeesCall__Inputs {
    return new EarmarkFeesCall__Inputs(this);
  }

  get outputs(): EarmarkFeesCall__Outputs {
    return new EarmarkFeesCall__Outputs(this);
  }
}

export class EarmarkFeesCall__Inputs {
  _call: EarmarkFeesCall;

  constructor(call: EarmarkFeesCall) {
    this._call = call;
  }
}

export class EarmarkFeesCall__Outputs {
  _call: EarmarkFeesCall;

  constructor(call: EarmarkFeesCall) {
    this._call = call;
  }
}

export class EarmarkRewardsCall extends ethereum.Call {
  get inputs(): EarmarkRewardsCall__Inputs {
    return new EarmarkRewardsCall__Inputs(this);
  }

  get outputs(): EarmarkRewardsCall__Outputs {
    return new EarmarkRewardsCall__Outputs(this);
  }
}

export class EarmarkRewardsCall__Inputs {
  _call: EarmarkRewardsCall;

  constructor(call: EarmarkRewardsCall) {
    this._call = call;
  }

  get _pid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EarmarkRewardsCall__Outputs {
  _call: EarmarkRewardsCall;

  constructor(call: EarmarkRewardsCall) {
    this._call = call;
  }
}

export class SetFactoriesCall extends ethereum.Call {
  get inputs(): SetFactoriesCall__Inputs {
    return new SetFactoriesCall__Inputs(this);
  }

  get outputs(): SetFactoriesCall__Outputs {
    return new SetFactoriesCall__Outputs(this);
  }
}

export class SetFactoriesCall__Inputs {
  _call: SetFactoriesCall;

  constructor(call: SetFactoriesCall) {
    this._call = call;
  }

  get _rfactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _sfactory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tfactory(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SetFactoriesCall__Outputs {
  _call: SetFactoriesCall;

  constructor(call: SetFactoriesCall) {
    this._call = call;
  }
}

export class SetFeeInfoCall extends ethereum.Call {
  get inputs(): SetFeeInfoCall__Inputs {
    return new SetFeeInfoCall__Inputs(this);
  }

  get outputs(): SetFeeInfoCall__Outputs {
    return new SetFeeInfoCall__Outputs(this);
  }
}

export class SetFeeInfoCall__Inputs {
  _call: SetFeeInfoCall;

  constructor(call: SetFeeInfoCall) {
    this._call = call;
  }

  get _feeToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeInfoCall__Outputs {
  _call: SetFeeInfoCall;

  constructor(call: SetFeeInfoCall) {
    this._call = call;
  }
}

export class SetFeeManagerCall extends ethereum.Call {
  get inputs(): SetFeeManagerCall__Inputs {
    return new SetFeeManagerCall__Inputs(this);
  }

  get outputs(): SetFeeManagerCall__Outputs {
    return new SetFeeManagerCall__Outputs(this);
  }
}

export class SetFeeManagerCall__Inputs {
  _call: SetFeeManagerCall;

  constructor(call: SetFeeManagerCall) {
    this._call = call;
  }

  get _feeM(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeManagerCall__Outputs {
  _call: SetFeeManagerCall;

  constructor(call: SetFeeManagerCall) {
    this._call = call;
  }
}

export class SetFeesCall extends ethereum.Call {
  get inputs(): SetFeesCall__Inputs {
    return new SetFeesCall__Inputs(this);
  }

  get outputs(): SetFeesCall__Outputs {
    return new SetFeesCall__Outputs(this);
  }
}

export class SetFeesCall__Inputs {
  _call: SetFeesCall;

  constructor(call: SetFeesCall) {
    this._call = call;
  }

  get _platformFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _profitFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetFeesCall__Outputs {
  _call: SetFeesCall;

  constructor(call: SetFeesCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class SetPoolManagerCall extends ethereum.Call {
  get inputs(): SetPoolManagerCall__Inputs {
    return new SetPoolManagerCall__Inputs(this);
  }

  get outputs(): SetPoolManagerCall__Outputs {
    return new SetPoolManagerCall__Outputs(this);
  }
}

export class SetPoolManagerCall__Inputs {
  _call: SetPoolManagerCall;

  constructor(call: SetPoolManagerCall) {
    this._call = call;
  }

  get _poolM(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPoolManagerCall__Outputs {
  _call: SetPoolManagerCall;

  constructor(call: SetPoolManagerCall) {
    this._call = call;
  }
}

export class SetRewardContractsCall extends ethereum.Call {
  get inputs(): SetRewardContractsCall__Inputs {
    return new SetRewardContractsCall__Inputs(this);
  }

  get outputs(): SetRewardContractsCall__Outputs {
    return new SetRewardContractsCall__Outputs(this);
  }
}

export class SetRewardContractsCall__Inputs {
  _call: SetRewardContractsCall;

  constructor(call: SetRewardContractsCall) {
    this._call = call;
  }

  get _rewards(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRewardContractsCall__Outputs {
  _call: SetRewardContractsCall;

  constructor(call: SetRewardContractsCall) {
    this._call = call;
  }
}

export class SetTreasuryCall extends ethereum.Call {
  get inputs(): SetTreasuryCall__Inputs {
    return new SetTreasuryCall__Inputs(this);
  }

  get outputs(): SetTreasuryCall__Outputs {
    return new SetTreasuryCall__Outputs(this);
  }
}

export class SetTreasuryCall__Inputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }

  get _treasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryCall__Outputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }
}

export class SetVoteDelegateCall extends ethereum.Call {
  get inputs(): SetVoteDelegateCall__Inputs {
    return new SetVoteDelegateCall__Inputs(this);
  }

  get outputs(): SetVoteDelegateCall__Outputs {
    return new SetVoteDelegateCall__Outputs(this);
  }
}

export class SetVoteDelegateCall__Inputs {
  _call: SetVoteDelegateCall;

  constructor(call: SetVoteDelegateCall) {
    this._call = call;
  }

  get _voteDelegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVoteDelegateCall__Outputs {
  _call: SetVoteDelegateCall;

  constructor(call: SetVoteDelegateCall) {
    this._call = call;
  }
}

export class ShutdownPoolCall extends ethereum.Call {
  get inputs(): ShutdownPoolCall__Inputs {
    return new ShutdownPoolCall__Inputs(this);
  }

  get outputs(): ShutdownPoolCall__Outputs {
    return new ShutdownPoolCall__Outputs(this);
  }
}

export class ShutdownPoolCall__Inputs {
  _call: ShutdownPoolCall;

  constructor(call: ShutdownPoolCall) {
    this._call = call;
  }

  get _pid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ShutdownPoolCall__Outputs {
  _call: ShutdownPoolCall;

  constructor(call: ShutdownPoolCall) {
    this._call = call;
  }
}

export class ShutdownSystemCall extends ethereum.Call {
  get inputs(): ShutdownSystemCall__Inputs {
    return new ShutdownSystemCall__Inputs(this);
  }

  get outputs(): ShutdownSystemCall__Outputs {
    return new ShutdownSystemCall__Outputs(this);
  }
}

export class ShutdownSystemCall__Inputs {
  _call: ShutdownSystemCall;

  constructor(call: ShutdownSystemCall) {
    this._call = call;
  }
}

export class ShutdownSystemCall__Outputs {
  _call: ShutdownSystemCall;

  constructor(call: ShutdownSystemCall) {
    this._call = call;
  }
}

export class VoteGaugeWeightCall extends ethereum.Call {
  get inputs(): VoteGaugeWeightCall__Inputs {
    return new VoteGaugeWeightCall__Inputs(this);
  }

  get outputs(): VoteGaugeWeightCall__Outputs {
    return new VoteGaugeWeightCall__Outputs(this);
  }
}

export class VoteGaugeWeightCall__Inputs {
  _call: VoteGaugeWeightCall;

  constructor(call: VoteGaugeWeightCall) {
    this._call = call;
  }

  get _gauges(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _weights(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class VoteGaugeWeightCall__Outputs {
  _call: VoteGaugeWeightCall;

  constructor(call: VoteGaugeWeightCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _pid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawAllCall extends ethereum.Call {
  get inputs(): WithdrawAllCall__Inputs {
    return new WithdrawAllCall__Inputs(this);
  }

  get outputs(): WithdrawAllCall__Outputs {
    return new WithdrawAllCall__Outputs(this);
  }
}

export class WithdrawAllCall__Inputs {
  _call: WithdrawAllCall;

  constructor(call: WithdrawAllCall) {
    this._call = call;
  }

  get _pid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawAllCall__Outputs {
  _call: WithdrawAllCall;

  constructor(call: WithdrawAllCall) {
    this._call = call;
  }
}

export class WithdrawToCall extends ethereum.Call {
  get inputs(): WithdrawToCall__Inputs {
    return new WithdrawToCall__Inputs(this);
  }

  get outputs(): WithdrawToCall__Outputs {
    return new WithdrawToCall__Outputs(this);
  }
}

export class WithdrawToCall__Inputs {
  _call: WithdrawToCall;

  constructor(call: WithdrawToCall) {
    this._call = call;
  }

  get _pid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class WithdrawToCall__Outputs {
  _call: WithdrawToCall;

  constructor(call: WithdrawToCall) {
    this._call = call;
  }
}

export class WithdrawUnlockedWethBalCall extends ethereum.Call {
  get inputs(): WithdrawUnlockedWethBalCall__Inputs {
    return new WithdrawUnlockedWethBalCall__Inputs(this);
  }

  get outputs(): WithdrawUnlockedWethBalCall__Outputs {
    return new WithdrawUnlockedWethBalCall__Outputs(this);
  }
}

export class WithdrawUnlockedWethBalCall__Inputs {
  _call: WithdrawUnlockedWethBalCall;

  constructor(call: WithdrawUnlockedWethBalCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawUnlockedWethBalCall__Outputs {
  _call: WithdrawUnlockedWethBalCall;

  constructor(call: WithdrawUnlockedWethBalCall) {
    this._call = call;
  }
}
